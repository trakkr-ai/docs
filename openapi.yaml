 openapi: 3.0.0
info:
  title: Trakkr API
  description: Monitor your brand visibility and presence across AI models and prompts
  version: 1.0.0
  contact:
    name: Trakkr Support
    email: support@trakkr.ai
    url: https://trakkr.ai/support
  license:
    name: Proprietary
    url: https://trakkr.ai/license
servers:
  - url: https://api.trakkr.ai
    description: Production server
  - url: https://staging-api.trakkr.ai
    description: Staging server
security:
  - bearerAuth: []
tags:
  - name: Brand Analytics
    description: Operations related to brand score analytics
  - name: Brand Management
    description: Operations related to brand management
paths:
  /get-scores:
    get:
      summary: Get scores
      description: Retrieve historical brand visibility and presence scores with optional breakdowns by AI model and/or prompt.
      operationId: getScores
      parameters:
        - name: brand
          in: query
          required: true
          schema:
            type: string
            pattern: '^[0-9a-fx]{32}$'
            minLength: 32
            maxLength: 32
          description: The brand ID (32-character hexadecimal string)
          example: "0000000000000x000000000000000000"
        - name: breakdown
          in: query
          required: false
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
              enum: 
                - model
                - prompt
            minItems: 0
            maxItems: 2
            uniqueItems: true
          description: |
            Array of breakdown types. Valid values: 
            - `[]` - Daily time-series data, not broken down
            - `["model"]` - Break down by AI model
            - `["prompt"]` - Break down by prompt
            - `["model", "prompt"]` - Break down by both
          examples:
            top_level:
              value: []
              summary: Not broken down
            model_only:
              value: ["model"]
              summary: Model breakdown only
            prompt_only:
              value: ["prompt"]
              summary: Prompt breakdown only
            both:
              value: ["model", "prompt"]
              summary: Both model and prompt breakdown
        - name: start_date
          in: query
          required: false
          schema:
            type: string
            format: date
            pattern: '^\d{4}-\d{2}-\d{2}$'
          description: Start date in YYYY-MM-DD format. If not provided, defaults to 28 days before end_date
          example: "2025-01-01"
        - name: end_date
          in: query
          required: false
          schema:
            type: string
            format: date
            pattern: '^\d{4}-\d{2}-\d{2}$'
          description: End date in YYYY-MM-DD format. If not provided, defaults to the most recent report date
          example: "2025-01-31"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScoresResponse'
              examples:
                basic_response:
                  $ref: '#/components/examples/BasicScoresResponse'
                model_breakdown_response:
                  $ref: '#/components/examples/ModelBreakdownResponse'
                full_breakdown_response:
                  $ref: '#/components/examples/FullBreakdownResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /get-brands:
    get:
      summary: Get brands
      description: Retrieve list of brands accessible to your API key
      operationId: getBrands
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrandsResponse'
              examples:
                brands_list:
                  $ref: '#/components/examples/BrandsListResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: |
        API key authentication. Include your API key in the Authorization header:
        `Authorization: Bearer YOUR_API_KEY`
  schemas:
    ScoresResponse:
      type: object
      required:
        - brand_id
        - start_date
        - end_date
        - breakdown
        - data
      properties:
        brand_id:
          type: string
          pattern: '^[0-9a-fx]{32}$'
          description: The brand ID that was queried
          example: "0000000000000x000000000000000000"
        start_date:
          type: string
          format: date
          description: The start date used for the query
          example: "2025-01-01"
        end_date:
          type: string
          format: date
          description: The end date used for the query
          example: "2025-01-31"
        breakdown:
          type: array
          description: The breakdown types that were requested
          items:
            type: string
            enum: ["model", "prompt"]
          example: ["model"]
        data:
          type: array
          description: Array of daily report data
          items:
            $ref: '#/components/schemas/DailyReport'
        errors:
          type: array
          nullable: true
          description: Array of non-critical error messages (null if no errors)
          items:
            type: string
        metadata:
          type: object
          description: Additional metadata about the response
          properties:
            total_days:
              type: integer
              description: Total number of days in the response
            cache_hit:
              type: boolean
              description: Whether the response was served from cache
            processing_time_ms:
              type: integer
              description: Processing time in milliseconds
    DailyReport:
      type: object
      required:
        - date
        - visibility
        - presence
      properties:
        date:
          type: string
          format: date
          description: The report date
          example: "2025-01-01"
        visibility:
          type: number
          format: float
          minimum: 0
          maximum: 100
          description: Brand visibility score (0.00 to 100.00)
          example: 85.50
        presence:
          type: number
          format: float
          minimum: 0
          maximum: 100
          description: Brand presence score (0.00 to 100.00)
          example: 92.30
        models:
          type: array
          description: Model breakdown data (present if "model" in breakdown)
          items:
            $ref: '#/components/schemas/ModelScore'
        prompts:
          type: array
          description: Prompt breakdown data (present if "prompt" in breakdown)
          items:
            $ref: '#/components/schemas/PromptScore'
        model_prompt_breakdown:
          type: array
          description: Combined model/prompt data (present if both in breakdown)
          items:
            $ref: '#/components/schemas/ModelPromptScore'
    ModelScore:
      type: object
      required:
        - model
        - visibility
        - presence
      properties:
        model:
          type: string
          description: The AI model name
          example: "GPT-4"
        visibility:
          type: number
          format: float
          minimum: 0
          maximum: 100
          description: Model-specific visibility score
          example: 88.20
        presence:
          type: number
          format: float
          minimum: 0
          maximum: 100
          description: Model-specific presence score
          example: 94.10
    PromptScore:
      type: object
      required:
        - id
        - visibility
        - presence
        - prompt
      properties:
        id:
          type: string
          description: Unique prompt identifier
          example: "prompt_001"
        visibility:
          type: number
          format: float
          minimum: 0
          maximum: 100
          description: Prompt-specific visibility score
          example: 89.30
        presence:
          type: number
          format: float
          minimum: 0
          maximum: 100
          description: Prompt-specific presence score
          example: 95.20
        prompt:
          type: string
          description: The actual prompt text
          example: "What are the best financial services companies?"
    ModelPromptScore:
      type: object
      required:
        - model
        - prompt
      properties:
        model:
          type: string
          description: The AI model name
          example: "GPT-4"
        prompt:
          type: string
          description: The prompt text
          example: "What are the best financial services companies?"
        rank:
          type: integer
          nullable: true
          minimum: 1
          description: Brand's position in the response (null if not mentioned)
          example: 3
    BrandsResponse:
      type: object
      required:
        - brands
      properties:
        brands:
          type: array
          items:
            $ref: '#/components/schemas/Brand'
    Brand:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: string
          pattern: '^[0-9a-fx]{32}$'
          description: Brand ID
          example: "0000000000000x000000000000000000"
        name:
          type: string
          description: Brand name
          example: "Acme Corporation"
    Error:
      type: object
      required:
        - error
        - message
        - timestamp
      properties:
        error:
          type: string
          description: Error code
          example: "INVALID_PARAMETER"
        message:
          type: string
          description: Human-readable error message
          example: "The 'brand' parameter is required"
        details:
          type: array
          items:
            type: object
            properties:
              field:
                type: string
                description: Field that caused the error
              message:
                type: string
                description: Specific error message for this field
          description: Detailed error information
        timestamp:
          type: string
          format: date-time
          description: When the error occurred
          example: "2025-01-15T12:30:00Z"
        request_id:
          type: string
          description: Unique request identifier for debugging
          example: "req_1234567890"
  responses:
    BadRequest:
      description: Bad Request - Invalid parameters
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: "INVALID_PARAMETER"
            message: "Invalid request parameters"
            details:
              - field: "brand"
                message: "Brand ID must be 32 characters"
            timestamp: "2025-01-15T12:30:00Z"
            request_id: "req_1234567890"
    Unauthorized:
      description: Unauthorized - Invalid or missing API key
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: "UNAUTHORIZED"
            message: "Invalid or missing API key"
            timestamp: "2025-01-15T12:30:00Z"
            request_id: "req_1234567890"
    Forbidden:
      description: Forbidden - Access denied to this resource
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: "FORBIDDEN"
            message: "You do not have access to this brand"
            timestamp: "2025-01-15T12:30:00Z"
            request_id: "req_1234567890"
    NotFound:
      description: Not Found - Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: "NOT_FOUND"
            message: "Brand not found"
            timestamp: "2025-01-15T12:30:00Z"
            request_id: "req_1234567890"
    TooManyRequests:
      description: Too Many Requests - Rate limit exceeded
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: "RATE_LIMIT_EXCEEDED"
            message: "API rate limit exceeded. Please try again later."
            timestamp: "2025-01-15T12:30:00Z"
            request_id: "req_1234567890"
      headers:
        X-RateLimit-Limit:
          description: The rate limit for the endpoint
          schema:
            type: integer
          example: 100
        X-RateLimit-Remaining:
          description: The number of requests remaining
          schema:
            type: integer
          example: 0
        X-RateLimit-Reset:
          description: Unix timestamp when the rate limit resets
          schema:
            type: integer
          example: 1736947800
    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: "INTERNAL_ERROR"
            message: "An unexpected error occurred"
            timestamp: "2025-01-15T12:30:00Z"
            request_id: "req_1234567890"
  examples:
    BasicScoresResponse:
      summary: Basic response without breakdown
      value:
        brand_id: "0000000000000x000000000000000000"
        start_date: "2025-01-01"
        end_date: "2025-01-03"
        breakdown: []
        data:
          - date: "2025-01-01"
            visibility: 85.50
            presence: 92.30
          - date: "2025-01-02"
            visibility: 87.20
            presence: 91.80
          - date: "2025-01-03"
            visibility: 86.90
            presence: 93.10
        errors: null
        metadata:
          total_days: 3
          cache_hit: true
          processing_time_ms: 45
    ModelBreakdownResponse:
      summary: Response with model breakdown
      value:
        brand_id: "0000000000000x000000000000000000"
        start_date: "2025-01-01"
        end_date: "2025-01-02"
        breakdown: ["model"]
        data:
          - date: "2025-01-01"
            visibility: 85.50
            presence: 92.30
            models:
              - model: "GPT-4"
                visibility: 88.20
                presence: 94.10
              - model: "Claude"
                visibility: 82.80
                presence: 90.50
          - date: "2025-01-02"
            visibility: 87.20
            presence: 91.80
            models:
              - model: "GPT-4"
                visibility: 89.10
                presence: 93.50
              - model: "Claude"
                visibility: 85.30
                presence: 90.10
        errors: null
        metadata:
          total_days: 2
          cache_hit: false
          processing_time_ms: 120
    FullBreakdownResponse:
      summary: Response with both model and prompt breakdown
      value:
        brand_id: "0000000000000x000000000000000000"
        start_date: "2025-01-01"
        end_date: "2025-01-01"
        breakdown: ["model", "prompt"]
        data:
          - date: "2025-01-01"
            visibility: 85.50
            presence: 92.30
            models:
              - model: "GPT-4"
                visibility: 88.20
                presence: 94.10
              - model: "Claude"
                visibility: 82.80
                presence: 90.50
            prompts:
              - id: "prompt_001"
                visibility: 89.30
                presence: 95.20
                prompt: "What are the best financial services companies?"
              - id: "prompt_002"
                visibility: 81.70
                presence: 89.40
                prompt: "Compare top investment platforms"
            model_prompt_breakdown:
              - model: "GPT-4"
                prompt: "What are the best financial services companies?"
                rank: 3
              - model: "GPT-4"
                prompt: "Compare top investment platforms"
                rank: null
              - model: "Claude"
                prompt: "What are the best financial services companies?"
                rank: 5
              - model: "Claude"
                prompt: "Compare top investment platforms"
                rank: 2
        errors: null
        metadata:
          total_days: 1
          cache_hit: true
          processing_time_ms: 85
    BrandsListResponse:
      summary: List of accessible brands
      value:
        brands:
          - id: "0000000000000x000000000000000000"
            name: "Acme Corporation"
          - id: "0000000000000x000000000000000001"
            name: "TechStart Inc"
          - id: "0000000000000x000000000000000002"
            name: "Global Finance Co"